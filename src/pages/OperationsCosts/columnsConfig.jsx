import { SortIcon } from '../../components/sharedComponents/ReportTable/ReportTable';
import { formatPrice } from '../../service/utils';
import { Tooltip, Flex, Button, ConfigProvider } from 'antd';
import { format } from 'date-fns';
function summaryRender(value, row) {
	if (row.key == 'summary') {
		return value;
	}
	return format(new Date(value), 'd.MM.yyyy');
}

function actionRender(value, row) {
	if (row.key == 'summary') {
		return '-';
	}
	return (<Flex justify="start" gap={20}>
				<ConfigProvider>
					<Button
						type="text"
						icon={
							<svg
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									fillRule="evenodd"
									clipRule="evenodd"
									d="M3.29277 15.707L13.4999 5.49989C14.8806 4.11918 17.1192 4.11918 18.4999 5.49989C19.8806 6.8806 19.8806 9.11918 18.4999 10.4999L8.29277 20.707C8.10523 20.8945 7.85088 20.9999 7.58566 20.9999H3.99988C3.44759 20.9999 2.99988 20.5522 2.99988 19.9999V16.4141C2.99988 16.1489 3.10523 15.8945 3.29277 15.707ZM4.49988 19.4999V16.6212L14.5605 6.56055C15.3555 5.76562 16.6443 5.76562 17.4392 6.56055C18.2341 7.35547 18.2341 8.6443 17.4392 9.43923L7.37856 19.4999H4.49988Z"
									fill="#999999"
								/>
								<path
									d="M11.9999 19.2499C11.5857 19.2499 11.2499 19.5857 11.2499 19.9999C11.2499 20.4141 11.5857 20.7499 11.9999 20.7499H18.9999C19.4141 20.7499 19.7499 20.4141 19.7499 19.9999C19.7499 19.5857 19.4141 19.2499 18.9999 19.2499H11.9999Z"
									fill="#999999"
								/>
							</svg>
						}
					></Button>
					<Button
						type="text"
						icon={
							<svg
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									d="M3.24988 7.75C3.24988 5.67893 4.92881 4 6.99988 4H9.76293C10.8576 4 11.8977 4.47836 12.6101 5.30953L13.8448 6.75H11.8692L11.4713 6.28572C11.0438 5.78702 10.4198 5.5 9.76293 5.5H6.99988C5.75724 5.5 4.74988 6.50736 4.74988 7.75V13.75C4.74988 14.9926 5.75724 16 6.99988 16H7.99988V17.5H6.99988C4.92881 17.5 3.24988 15.8211 3.24988 13.75V7.75Z"
									fill="#999999"
								/>
								<path
									fillRule="evenodd"
									clipRule="evenodd"
									d="M12.9999 8C10.9288 8 9.24988 9.67893 9.24988 11.75V17.75C9.24988 19.8211 10.9288 21.5 12.9999 21.5H16.9999C19.0709 21.5 20.7499 19.8211 20.7499 17.75V13.1931C20.7499 12.2979 20.4297 11.4323 19.8471 10.7526L18.6101 9.30953C17.8977 8.47836 16.8576 8 15.7629 8H12.9999ZM10.7499 11.75C10.7499 10.5074 11.7572 9.5 12.9999 9.5H15.7629C16.4198 9.5 17.0438 9.78702 17.4713 10.2857L18.7082 11.7288C19.0577 12.1366 19.2499 12.656 19.2499 13.1931V17.75C19.2499 18.9926 18.2425 20 16.9999 20H12.9999C11.7572 20 10.7499 18.9926 10.7499 17.75V11.75Z"
									fill="#999999"
								/>
							</svg>
						}
					></Button>
					<Button
						type="text"
						icon={
							<svg
								width="24"
								height="24"
								viewBox="0 0 24 24"
								fill="none"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									fillRule="evenodd"
									clipRule="evenodd"
									d="M6.90178 5.45645C6.83572 5.46517 6.7728 5.48224 6.71396 5.50646C5.92748 5.5679 5.2374 5.629 4.74048 5.67508C4.48629 5.69865 4.2825 5.71831 4.14202 5.7321L3.98038 5.74815L3.92441 5.75381L3.92333 5.75392C3.51129 5.79623 3.21155 6.16456 3.25386 6.5766C3.29617 6.98865 3.66449 7.28838 4.07654 7.24608L4.07581 7.2389C4.07654 7.24608 4.07654 7.24608 4.07654 7.24608L4.1304 7.24062L4.28857 7.22493C4.42664 7.21137 4.62774 7.19197 4.879 7.16867C5.38163 7.12206 6.08435 7.05989 6.88418 6.99775C8.48931 6.87302 10.4653 6.75 11.9999 6.75C13.5346 6.75 15.5106 6.87302 17.1157 6.99775C17.9155 7.05989 18.6182 7.12206 19.1209 7.16867C19.3721 7.19197 19.5732 7.21137 19.7113 7.22493L19.8695 7.24062L19.9226 7.24601C20.3347 7.28831 20.7037 6.98865 20.746 6.5766C20.7883 6.16456 20.4886 5.79623 20.0765 5.75392L20.0195 5.74815L19.8579 5.7321C19.7174 5.71831 19.5136 5.69865 19.2594 5.67508C18.7625 5.62899 18.0724 5.5679 17.2859 5.50646C17.2342 5.48524 17.1794 5.46948 17.122 5.46001C16.6273 5.37837 16.2108 5.0449 16.023 4.57999L15.9325 4.35615C15.4183 3.08329 14.1828 2.25 12.81 2.25H11.4628C10.1082 2.25 8.88911 3.07225 8.38164 4.32825C8.13558 4.93723 7.58098 5.3668 6.92982 5.45275L6.90178 5.45645ZM11.4628 3.75C10.7196 3.75 10.0508 4.20111 9.77241 4.89018C9.71197 5.03976 9.64131 5.18341 9.56139 5.32039C10.4107 5.27787 11.2523 5.25 11.9999 5.25C12.8296 5.25 13.7751 5.28433 14.7184 5.3349C14.6875 5.27191 14.6587 5.20755 14.6322 5.14191L14.5418 4.91808C14.2565 4.21214 13.5714 3.75 12.81 3.75H11.4628Z"
									fill="black"
									fillOpacity="0.4"
								/>
								<path
									d="M18.7471 9.06497C18.783 8.65232 18.4776 8.2887 18.0649 8.25282C17.6523 8.21694 17.2886 8.52237 17.2528 8.93503L16.4475 18.1949C16.3464 19.3576 15.3731 20.25 14.206 20.25H9.39407C8.18945 20.25 7.19852 19.3012 7.1462 18.0977L6.74923 8.96742C6.73124 8.5536 6.38118 8.23272 5.96736 8.25071C5.55354 8.2687 5.23265 8.61876 5.25064 9.03258L5.64761 18.1629C5.73482 20.1687 7.38636 21.75 9.39407 21.75H14.206C16.1512 21.75 17.7734 20.2627 17.9419 18.3249L18.7471 9.06497Z"
									fill="black"
									fillOpacity="0.4"
								/>
								<path
									d="M8.99994 17.25C8.58572 17.25 8.24994 17.5858 8.24994 18C8.24994 18.4142 8.58572 18.75 8.99994 18.75H14.9999C15.4142 18.75 15.7499 18.4142 15.7499 18C15.7499 17.5858 15.4142 17.25 14.9999 17.25H8.99994Z"
									fill="black"
									fillOpacity="0.4"
								/>
							</svg>
						}
					></Button>
				</ConfigProvider>
			</Flex>)
}

function arrowRender(value, literal) {
	let status = 'table__arrow_static';
	if (value > 0) {
		status = 'table__arrow_positive';
	}
	if (value < 0) {
		status = 'table__arrow_negative';
	}
	return (
		<span className={`table__arrow ${status}`}>
			{formatPrice(value, literal)}
			{!!value && (
				<svg
					width="16"
					height="12"
					viewBox="0 0 20 12"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						d="M14 0L16.29 2.29L11.41 7.17L7.41 3.17L0 10.59L1.41 12L7.41 6L11.41 10L17.71 3.71L20 6V0H14Z"
						fill="currentColor"
					></path>
				</svg>
			)}
		</span>
	);
}

function sorter(a, b, key) {
	if (a.key == 'summary' || b.key == 'summary') {
		return 0;
	}

	let v1 = typeof a[key] == 'object' ? a[key]['rub'] : a[key];
	let v2 = typeof b[key] == 'object' ? b[key]['rub'] : b[key];

	return Number(v1 - v2);
}

export const COSTS_COLUMNS = [
	{
		title: 'Дата',
		dataIndex: 'date',
		key: 'date',
		render: summaryRender,
	},
	{
		title: 'Сумма, руб',
		dataIndex: 'sum',
		key: 'sum',
		render: (value) => <div>{formatPrice(value)}</div>,
	},
	{
		title: 'Статья расходов',
		dataIndex: 'article',
		key: 'article',
		render: (value) => <div>{value}</div>,
	},
	{
		title: 'Артикул',
		dataIndex: 'sku',
		key: 'sku',
		render: (value) => <div>{value}</div>,
	},
	{
		title: 'Бренд',
		dataIndex: 'brand',
		key: 'brand',
		render: (value) => <div>{value}</div>,
	},
	{
		title: 'Магазин',
		dataIndex: 'shop',
		key: 'shop',
		render: (value) => <div>{value}</div>,
	},
	{
		title: 'Действия',
		dataIndex: 'action',
		key: 'action',
		render: actionRender,
	},
];

export const ARTICLES_COLUMNS = [
	{
		title: 'Статья расходов',
		dataIndex: 'title'
	},
	{
		title: 'Действия',
		dataIndex: 'action'
	},
]