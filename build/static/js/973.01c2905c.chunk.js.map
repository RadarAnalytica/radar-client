{"version":3,"file":"static/js/973.01c2905c.chunk.js","mappings":"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","sources":["containers/calculate/CalculateForm.jsx","containers/calculate/CalculateResults.jsx","pages/Calculate.jsx"],"sourcesContent":["import React from 'react'\nimport '../../pages/styles.css'\n\nconst CalculateForm = ({\n    base: { sellPrice, setSellPrice, targetIncome, setTargetIncome },\n    mpCom: { mpComission, setMpComission, mpLogistic, setMpLogistic, reverseLogistic, setReverseLogistic },\n    selfCost: { buyinCost, setBuyinCost, logitics, setLogistics, wrapper, setWrapper },\n    additional: { buyoutRate, setBuyoutRate, taxRate, setTaxRate, amortization, setAmortization },\n    handleCalculate,\n}) => {\n    return (\n        <div className='calc-form'>\n            <p className=\"fw-bold mb-1\" style={{ fontSize: '2.25vh' }}>Базовые продажи</p>\n            <div className=\"calc-inputs row pl-3\">\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Цена продажи, руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setSellPrice(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Ваша цель по прибыли, руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setTargetIncome(Number(e.target.value))} />\n                </div>\n            </div>\n            <p className=\"fw-bold mb-1 mt-2\" style={{ fontSize: '2.25vh' }}>Комиссии маркетплейса</p>\n            <div className=\"calc-inputs row pl-3\">\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Комиссия маркетплейса, %</label>\n                    <input type=\"number\" className='form-control' onChange={e => setMpComission(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Логистика МП клиенту, руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setMpLogistic(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Обратная логистика, руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setReverseLogistic(Number(e.target.value))} />\n                </div>\n            </div>\n            <p className=\"fw-bold mb-1 mt-2\" style={{ fontSize: '2.25vh' }}>Себестоимость товара</p>\n            <div className=\"calc-inputs row pl-3\">\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Цена закупки, руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setBuyinCost(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Логистика, руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setLogistics(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Упаковка и др., руб</label>\n                    <input type=\"number\" className='form-control' onChange={e => setWrapper(Number(e.target.value))} />\n                </div>\n            </div>\n            <p className=\"fw-bold mb-1 mt-2\" style={{ fontSize: '2.25vh' }}>Дополнительно</p>\n            <div className=\"calc-inputs row pl-3\">\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Процент выкупа, %</label>\n                    <input type=\"number\" className='form-control' onChange={e => setBuyoutRate(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Налоговая ставка, %</label>\n                    <input type=\"number\" className='form-control' onChange={e => setTaxRate(Number(e.target.value))} />\n                </div>\n                <div className='col'>\n                    <label className='mb-2' style={{ fontSize: '1.75vh' }} htmlFor=\"\">Амортизация, %</label>\n                    <input type=\"number\" className='form-control' onChange={e => setAmortization(Number(e.target.value))} />\n                </div>\n            </div>\n            <div className='d-flex mt-2' style={{ width: '100%' }}>\n                <button className='prime-btn' style={{ height: '7vh' }} onClick={handleCalculate}>\n                    Рассчитать\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CalculateForm","import React from 'react'\nimport '../../pages/styles.css'\n\nconst CalculateResults = ({ result }) => {\n\n    return (\n        <div className='calc-results'>\n            <h5 className='fw-bold'>Результаты</h5>\n            <p className=\"mb-2\" style={{ fontSize: '1.75vh' }}>\n                Значимость этих проблем настолько очевидна, что реализация намеченных плановых заданий представляет собой интересный эксперимент проверки позиций, занимаемых участниками в отношении поставленных задач. Идейные соображения высшего порядка\n            </p>\n            <div className=\"d-flex justify-content-between\">\n                <span>Прибыль маржинальная</span>\n                <span className='fw-bold'>{result.marginalProfit.toFixed(1)} руб</span>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n                <span>Маржинальность</span>\n                <span className='fw-bold'>{result.grossProfitMargin.toFixed(1)} %</span>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n                <span>Чистая прибыль</span>\n                <span className='fw-bold'>{result.netProfit.toFixed(1)} руб</span>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n                <span>Рентабельность</span>\n                <span className='fw-bold'>{result.profitability.toFixed(1)} %</span>\n            </div>\n            <p className=\"mb-1\">Для достижения цели нужно продать:</p>\n            <div>\n                <span className='me-2 fw-bold'>{result.targetAmount.toFixed(0)} шт</span>\n                <span className='clue-text'>{Math.ceil(result.targetAmount / 30)} шт в день</span>\n            </div>\n        </div>\n    )\n}\n\nexport default CalculateResults","import React, { useState } from 'react'\nimport SideNav from '../components/SideNav'\nimport TopNav from '../components/TopNav'\nimport CalculateForm from '../containers/calculate/CalculateForm'\nimport CalculateResults from '../containers/calculate/CalculateResults'\n\nconst Calculate = () => {\n\n    const [sellPrice, setSellPrice] = useState(0)\n    const [targetIncome, setTargetIncome] = useState(0)\n    const [mpComission, setMpComission] = useState(0)\n    const [mpLogistic, setMpLogistic] = useState(0)\n    const [reverseLogistic, setReverseLogistic] = useState(0)\n    const [buyinCost, setBuyinCost] = useState(0)\n    const [logitics, setLogistics] = useState(0)\n    const [wrapper, setWrapper] = useState(0)\n    const [buyoutRate, setBuyoutRate] = useState(100)\n    const [taxRate, setTaxRate] = useState(0)\n    const [amortization, setAmortization] = useState(0)\n\n    const [result, setResult] = useState({\n        marginalProfit: 0,\n        grossProfitMargin: 0,\n        netProfit: 0,\n        profitability: 0,\n        targetAmount: 0,\n    })\n\n    const calculateMetrics = () => {\n        // Calculate Marginal Profit\n        const marginalProfit = (sellPrice - buyinCost - (sellPrice / 100 * mpComission) - mpLogistic - (taxRate * sellPrice / 100)) - (sellPrice - buyinCost - (sellPrice / 100 * mpComission) - mpLogistic - (taxRate * sellPrice / 100)) * ((100 - buyoutRate) / 5) / 100;\n\n        // Calculate Gross Profit Margin\n        const grossProfitMargin = ((marginalProfit) / sellPrice) * 100;\n\n        // Calculate Net Profit\n        const netProfit = (marginalProfit) - wrapper - amortization;\n\n        // Calculate Profitability\n        const profitability = (netProfit / sellPrice) * 100 * 2;\n\n        const targetAmount = targetIncome / marginalProfit\n\n        setResult({\n            marginalProfit,\n            grossProfitMargin,\n            netProfit,\n            profitability,\n            targetAmount\n        })\n\n        return {\n            marginalProfit,\n            grossProfitMargin,\n            netProfit,\n            profitability,\n            targetAmount\n        };\n    };\n\n    const handleCalculate = () => {\n        const result = calculateMetrics();\n        console.log(result); // You can display or utilize the result in any way you want\n    };\n\n\n\n    return (\n        <div className='calculate-page'>\n            <SideNav />\n            <div className=\"calculate-content pb-3\">\n                <TopNav title={'Калькулятор unit-экономики товара'} />\n                <div className=\"calculate-container dash-container container\">\n                    <div className=\"row ps-1 pt-2\">\n                        <div className=\"col-8\">\n                            <CalculateForm\n                                base={{\n                                    sellPrice, setSellPrice, targetIncome, setTargetIncome\n                                }}\n                                mpCom={{\n                                    mpComission, setMpComission, mpLogistic, setMpLogistic, reverseLogistic, setReverseLogistic\n                                }}\n                                selfCost={{\n                                    buyinCost, setBuyinCost, logitics, setLogistics, wrapper, setWrapper\n                                }}\n                                additional={{\n                                    buyoutRate, setBuyoutRate, taxRate, setTaxRate, amortization, setAmortization\n                                }}\n                                handleCalculate={handleCalculate}\n                            />\n                        </div>\n                        <div className=\"col-4\">\n                            <CalculateResults result={result} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Calculate"],"names":["_ref","base","sellPrice","setSellPrice","targetIncome","setTargetIncome","mpCom","mpComission","setMpComission","mpLogistic","setMpLogistic","reverseLogistic","setReverseLogistic","selfCost","buyinCost","setBuyinCost","logitics","setLogistics","wrapper","setWrapper","additional","buyoutRate","setBuyoutRate","taxRate","setTaxRate","amortization","setAmortization","handleCalculate","_jsxs","className","children","_jsx","style","fontSize","htmlFor","type","onChange","e","Number","target","value","width","height","onClick","result","marginalProfit","toFixed","grossProfitMargin","netProfit","profitability","targetAmount","Math","ceil","Calculate","useState","setResult","SideNav","TopNav","title","CalculateForm","calculateMetrics","console","log","CalculateResults"],"sourceRoot":""}