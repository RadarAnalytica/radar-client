{"version":3,"file":"static/js/62.46a343ac.chunk.js","mappings":"gJAIA,MAwDA,EAxDmBA,IAAyJ,IAAxJ,KAAEC,EAAI,QAAEC,EAAO,eAAEC,EAAc,cAAEC,EAAa,SAAEC,EAAQ,MAAEC,EAAK,QAAEC,EAAO,SAAEC,EAAQ,YAAEC,EAAW,MAAEC,EAAK,aAAEC,EAAY,KAAEC,EAAI,UAAEC,EAAS,UAAEC,GAAWd,EAElK,MAAOe,EAAOC,IAAYC,EAAAA,EAAAA,WAAS,IAE5BC,EAAQC,IAAcF,EAAAA,EAAAA,UAASL,GAEtC,OACIQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,SAAOG,QAAQ,GAAGF,UAAU,gBAAeC,SAAA,EAACE,EAAAA,EAAAA,KAAA,QAAMC,MAAO,CAAEC,MAAO,MAAOC,YAAa,IAAKL,SAAEd,EAAW,KAAO,OAAaF,MAE5Hc,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uCAAuCI,MAAO,CAAEG,MAAO,QAASN,SAAA,EAC3EF,EAAAA,EAAAA,MAAA,OAAKK,MAAO,CAAEG,MAAO,QAASN,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,SACIH,UAAU,yBACVT,KAAMM,EACNT,YAAaA,EACboB,aAAclB,EACdmB,SAAUC,GAAK1B,EAAS0B,GACxBlB,UAAWA,EACXC,UAAWA,EACXJ,MAAOA,EACPe,MAAOtB,GAAkBC,EACrB,CACI4B,UAAW,MACXC,gBAAiB,wBACjBC,OAAQ,6CAGZ,CAAEF,UAAW,SAIjB7B,GACIqB,EAAAA,EAAAA,KAAA,KAAGH,UAAU,OAAOI,MAAO,CAAEC,MAAO,MAAOS,WAAY,KAAMb,SAAEnB,IAC7DC,GACEoB,EAAAA,EAAAA,KAAA,KAAGH,UAAU,OAAOI,MAAO,CAAEC,MAAO,MAAOS,WAAY,KAAMb,SAAElB,IAC7D,QAIdH,EACKc,GAKGS,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAYI,MAAO,CAAEW,OAAQ,UAAWC,SAAU,WAAYC,SAAU,QAAShB,UAC5FE,EAAAA,EAAAA,KAACe,EAAAA,IAAK,CAACd,MAAO,CAAEa,SAAU,OAAQE,OAAQ,SAAWC,QAASA,KAAQzB,GAAUD,GAAQI,EAAW,WAAW,OALlHK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,YAAYI,MAAO,CAAEW,OAAQ,UAAWC,SAAU,WAAYC,SAAU,QAAShB,UAC5FE,EAAAA,EAAAA,KAACkB,EAAAA,IAAW,CAACjB,MAAO,CAAEa,SAAU,OAAQE,OAAQ,SAAWC,QAASA,KAAQzB,GAAUD,GAAQI,EAAW,OAAO,MAMtH,UAGZ,C,kICjDd,MA6EA,EA7EoBnB,IAAgB,IAAf,MAAE2C,GAAO3C,EAE1B,MAAO4C,EAAMC,IAAW5B,EAAAA,EAAAA,aACjB6B,EAAUC,IAAe9B,EAAAA,EAAAA,YAI1B+B,GAAWC,EAAAA,EAAAA,MAkBXC,EAAWnB,IACTa,GAAQE,GAAaF,IAASE,EAjBnBK,OAAOR,EAAOC,KAC7B,MAAMQ,QAAYC,MAAM,GAADC,OAAIC,EAAAA,EAAG,8BAA8B,CACxDC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBjB,QACAkB,SAAUjB,EACVkB,QAASlB,MAIjB,aADmBQ,EAAIW,MACZ,EAKPC,CAAWrB,EAAOC,GAAMqB,MAAKC,IACzBC,QAAQC,IAAIF,GACRA,GACAG,MAAM,qIACNrB,EAAS,YAETqB,MAAM,qLACV,IACDJ,MAAKC,IACJG,MAAM,oIACNrB,EAAS,UAAU,IAIvBjB,EAAEuC,gBACN,EAGJ,OACIlD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EAClDE,EAAAA,EAAAA,KAAA,OAAK+C,IAAKC,EAAMC,IAAI,GAAGpD,UAAU,UACjCG,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEU,WAAY,IAAKG,SAAU,QAAUjB,UAAU,OAAMC,SAAC,kIAEvEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BE,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACP9D,KAAM,WACNH,YAAa,sEACbH,MAAO,sEACPD,SAnDI0B,GAAMc,EAAQd,EAAE4C,OAAOjE,OAoD3BF,UAAU,KAEdgB,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACP9D,KAAM,WACNH,YAAa,0GACbH,MAAO,0GACPD,SAzDQ0B,GAAMgB,EAAYhB,EAAE4C,OAAOjE,OA0DnCF,UAAU,QAGlBgB,EAAAA,EAAAA,KAAA,UAAQH,UAAU,YAAYoB,QAAUV,GAAMmB,EAAQnB,GAAIN,MAAO,CAAEe,OAAQ,MAAOZ,MAAO,QAASN,SAAC,sDACnGE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEmD,QAAS,OAAQC,eAAgB,UAAWvD,UACtDF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,YAAWC,SAAA,EACpBE,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACzD,UAAU,OAAO0D,GAAI,UAAWtD,MAAO,CAAEE,YAAa,QAASL,SAAC,wEACtEE,EAAAA,EAAAA,KAACsD,EAAAA,GAAI,CAACzD,UAAU,OAAO0D,GAAI,UAAUzD,SAAC,oCAE5C,EC9Bd,EA5CkB0D,MAEG/B,EAAAA,EAAAA,MAAjB,MAGMgC,EAAOC,SAASC,SAASC,KAEzBC,GADQJ,EAAOA,EAAKK,MAAM,KAAO,IACdC,UAEnB5C,EAAQ0C,GAAcA,EAAWG,OAASH,EAAW,GAAK,MAGzDI,EAAWC,IAFLL,GAAcA,EAAWG,QAASH,EAAW,IAExBpE,EAAAA,EAAAA,WAAS,IAiB3C,OACIO,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oBAAmBC,UAE1BE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEG,MAAO,QAASY,OAAQ,QAASoC,QAAS,OAAQe,cAAe,SAAUC,WAAY,SAAUf,eAAgB,UAAWvD,UAGlIE,EAAAA,EAAAA,KAACqE,EAAW,CAAClD,MAAOA,OAK9B,C","sources":["components/InputField.jsx","containers/RestorePass.jsx","pages/ResetPage.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { PiEyeClosed, PiEye } from \"react-icons/pi\";\n\n\nconst InputField = ({ hide, options, emailErrorText, passErrorText, callback, label, subtext, required, placeholder, value, defautlValue, type, minLength, maxLength }) => {\n\n    const [shown, setShown] = useState(false)\n\n    const [neType, setNewType] = useState(type)\n\n    return (\n        <div className='input-field mb-2'>\n            <label htmlFor=\"\" className='mb-0 mt-1 p-0'><span style={{ color: 'red', marginRight: '' }}>{required ? '* ' : null}</span>{label}</label>\n            {/* {subtext ? <p className='mt-0 mb-1' style={{}}>{subtext}</p> : null} */}\n            <div className='d-flex gap-2 justify-content-between' style={{ width: '100%' }}>\n                <div style={{ width: '100%' }}>\n                    <input\n                        className='form-control mt-1 mb-0'\n                        type={neType}\n                        placeholder={placeholder}\n                        defaultValue={defautlValue}\n                        onChange={e => callback(e)}\n                        minLength={minLength}\n                        maxLength={maxLength}\n                        value={value}\n                        style={emailErrorText || passErrorText ?\n                            {\n                                minHeight: '4vh',\n                                backgroundColor: 'rgba(255, 0, 0, 0.05)',\n                                border: '1px solid rgba(255, 0, 0, 0.2) !important',\n                            }\n                            :\n                            { minHeight: '4vh' }\n                        }\n                    />\n                    {\n                        emailErrorText ?\n                            <p className=\"mb-1\" style={{ color: 'red', fontWeight: 600 }}>{emailErrorText}</p>\n                            : passErrorText ?\n                                <p className=\"mb-1\" style={{ color: 'red', fontWeight: 600 }}>{passErrorText}</p>\n                                : null\n                    }\n                </div>\n                {\n                    hide ?\n                        !shown ?\n                            <div className='eyes pt-1' style={{ cursor: 'pointer', position: 'relative', fontSize: '24px' }}>\n                                <PiEyeClosed style={{ fontSize: '40px', height: '3.9vh' }} onClick={() => { setShown(!shown); setNewType('text') }} />\n                            </div>\n                            :\n                            <div className='eyes pt-1' style={{ cursor: 'pointer', position: 'relative', fontSize: '24px' }}>\n                                <PiEye style={{ fontSize: '40px', height: '3.9vh' }} onClick={() => { setShown(!shown); setNewType('password') }} />\n                            </div>\n                        : null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default InputField","import React, { useContext, useState } from 'react'\nimport logo from '../assets/logo.png'\nimport InputField from '../components/InputField'\nimport { Link, useNavigate } from 'react-router-dom'\nimport AuthContext from '../service/AuthContext'\nimport { URL } from '../service/config'\n\nconst RestorePass = ({ email }) => {\n\n    const [pass, setPass] = useState()\n    const [confPass, setConfPass] = useState()\n\n    const handlePass = (e) => setPass(e.target.value)\n    const handleConfPass = (e) => setConfPass(e.target.value)\n    const navigate = useNavigate()\n\n    const updatePass = async (email, pass) => {\n        const res = await fetch(`${URL}/api/user/restore_password`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password: pass,\n                confirm: pass\n            })\n        })\n        const data = await res.json()\n        return data\n    }\n\n    const handler = (e) => {\n        if (pass && confPass && (pass === confPass)) {\n            updatePass(email, pass).then(data => {\n                console.log(data);\n                if (data) {\n                    alert('Пароль успешно обновлен!')\n                    navigate('/signin')\n                } else {\n                    alert('Возникла ошибка. Поторите попытку')\n                }\n            }).then(data => {\n                alert('Пароль успешно обновлен')\n                navigate('/signin')\n            })\n        }\n        else {\n            e.preventDefault()\n        }\n    }\n\n    return (\n        <div className='signin-form'>\n            <div className='d-flex flex-column align-items-center'>\n                <img src={logo} alt=\"\" className='logo' />\n                <h1 style={{ fontWeight: 700, fontSize: '24px' }} className='mt-3'>Восстановление пароля</h1>\n            </div>\n            <div className='fields-container'>\n                <InputField\n                    type={'password'}\n                    placeholder={'Новый пароль'}\n                    label={'Новый пароль'}\n                    callback={handlePass}\n                    required={true}\n                />\n                <InputField\n                    type={'password'}\n                    placeholder={'Подтвердите пароль'}\n                    label={'Подтвердите пароль'}\n                    callback={handleConfPass}\n                    required={true}\n                />\n            </div>\n            <button className='prime-btn' onClick={(e) => handler(e)} style={{ height: '7vh', width: '100%' }}>Обновить</button>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <p className='clue-text'>\n                    <Link className='link' to={'/signup'} style={{ marginRight: '20px' }}>Регистрация</Link>\n                    <Link className='link' to={'/signin'}>Вход</Link></p>\n            </div>\n        </div>\n    )\n}\n\nexport default RestorePass","import React, { useEffect, useState } from 'react'\nimport RestorePass from '../containers/RestorePass'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { URL } from '../service/config'\n\nconst ResetPage = () => {\n\n    const navigate = useNavigate()\n\n\n    const loca = document.location.href\n    const array = loca ? loca.split('/') : []\n    const reverseArr = array.reverse()\n\n    const email = reverseArr && reverseArr.length ? reverseArr[1] : null\n    const code = reverseArr && reverseArr.length ? reverseArr[0] : null\n\n    const [confirmed, setConfirmed] = useState(false)\n\n    // useEffect(() => {\n    //     if (email && code) {\n    //         const postData = { email, code };\n\n    //         axios.patch(`${URL}/api/user/confirm-reset`, postData)\n    //             .then(response => {\n    //                 console.log('Успешно подтверждено', response.data);\n    //                 setConfirmed(true)\n    //             })\n    //             .catch(error => {\n    //                 console.error('Ошибка при подтверждении', error);\n    //             });\n    //     }\n    // }, [email, code]);\n\n    return (\n        <div className='confirmation-page'>\n            {\n                <div style={{ width: '100vw', height: '100vh', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n                    {\n                        // confirmed ?\n                        <RestorePass email={email} />\n                        // : null\n                    }\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ResetPage"],"names":["_ref","hide","options","emailErrorText","passErrorText","callback","label","subtext","required","placeholder","value","defautlValue","type","minLength","maxLength","shown","setShown","useState","neType","setNewType","_jsxs","className","children","htmlFor","_jsx","style","color","marginRight","width","defaultValue","onChange","e","minHeight","backgroundColor","border","fontWeight","cursor","position","fontSize","PiEye","height","onClick","PiEyeClosed","email","pass","setPass","confPass","setConfPass","navigate","useNavigate","handler","async","res","fetch","concat","URL","method","headers","body","JSON","stringify","password","confirm","json","updatePass","then","data","console","log","alert","preventDefault","src","logo","alt","InputField","target","display","justifyContent","Link","to","ResetPage","loca","document","location","href","reverseArr","split","reverse","length","confirmed","setConfirmed","flexDirection","alignItems","RestorePass"],"sourceRoot":""}