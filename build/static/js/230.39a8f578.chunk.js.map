{"version":3,"file":"static/js/230.39a8f578.chunk.js","mappings":"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","sources":["pages/Settings.jsx","service/serviceFunctions.jsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport SideNav from '../components/SideNav'\nimport TopNav from '../components/TopNav'\nimport AuthContext from '../service/AuthContext'\nimport { ServiceFunctions } from '../service/serviceFunctions'\nimport { URL } from '../service/config'\nimport './styles.css'\n\nconst Settings = () => {\n\n    const { user } = useContext(AuthContext)\n\n    const [brandNames, setBrandNames] = useState()\n    const [activeBrand, setActiveBrand] = useState()\n    useEffect(() => {\n        if (user) {\n            ServiceFunctions.getBrandNames(user.id).then(data => {\n                let names = [...new Set(data)]\n                setBrandNames(names)\n            })\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (brandNames && brandNames.length) {\n            setActiveBrand(brandNames[0])\n        }\n    }, [brandNames])\n\n\n\n    const [file, setFile] = useState(null);\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleSubmit = async () => {\n        if (!file) {\n            alert('Пожалуйста, выберите файл');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('excelFile', file);\n\n        try {\n            const response = await fetch(`${URL}/api/data-collection/set-costs/${user.id}?brandName=${activeBrand}`, {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (response.ok) {\n                alert('Файл успешно загружен');\n            } else {\n                throw new Error('Произошла ошибка при загрузке файла');\n            }\n        } catch (error) {\n            console.error('Ошибка:', error);\n            alert('Произошла ошибка при загрузке файла');\n        }\n    };\n\n    const [tax, setTax] = useState({ type: null, value: null })\n    useEffect(() => {\n        setTax({ ...tax, type: null })\n    }, [])\n\n    const handleTaxSubmit = (e, obj) => {\n        if (obj.value === null) {\n            e.preventDefautl()\n            alert('Укажите значение налоговой ставки')\n        } else {\n            ServiceFunctions.updateTax(user.id, activeBrand, tax)\n        }\n    }\n\n    console.log(tax);\n\n    return (\n        <div className='dashboard-page'>\n            <SideNav />\n            <div className=\"dashboard-content pb-3\">\n                <TopNav title={'Настройки аккаунта'} />\n\n                <div className=\"container dash-container\">\n                    <div className=\"mt-3 wide-plate\">\n                        <h5 className='mb-1 fw-bold' style={{ fontSize: '2.5vh' }}>Внести себестоимость товаров</h5>\n                        <div className=\"filter-item w-50 col me-2 mb-3\">\n                            <label style={{ fontSize: '2vh', margin: '1vh 0' }} htmlFor=\"store\">Магазин:</label>\n                            <select style={{ fontSize: '2vh' }} className='form-control w-75' id=\"store\" defaultValue={brandNames ? brandNames[0] : null}\n                                onChange={e => setActiveBrand(e.target.value)}\n                            >\n                                {\n                                    brandNames && brandNames.map((brand, i) => (\n                                        <option key={i} value={brand}>{brand}</option>\n                                    ))\n                                }\n                            </select>\n                        </div>\n                        <div className='d-flex justify-content-between align-items-center'>\n                            <div className='d-flex align-items-center w-50'>\n                                <input type=\"file\" id=\"excelFile\" name=\"excelFile\" className='form-control ' onChange={handleFileChange}\n                                    style={{ height: '5vh', fontSize: '2.25vh', }}\n                                />\n                                <button className='prime-btn' style={{ padding: '1.25vh 2vh', maxWidth: '12vw', marginLeft: '1rem' }}\n                                    onClick={handleSubmit}\n                                >\n                                    Отправить\n                                </button>\n                            </div>\n                            <div>\n                                <button className='secondary-btn' style={{ padding: '1.25vh 2vh' }}\n                                    onClick={() => {\n                                        if (user && activeBrand) {\n                                            fetch(`${URL}/api/data-collection/costs/${user.id}?brandName=${activeBrand}`).then(\n                                                response => {\n                                                    return response.blob()\n                                                }\n                                            ).then(blob => {\n                                                const url = window.URL.createObjectURL(new Blob([blob]));\n                                                const link = document.createElement('a');\n                                                link.href = url;\n                                                link.setAttribute('download', `Себестоимость.xlsx`); // Устанавливаем имя файла для скачивания\n                                                document.body.appendChild(link);\n                                                link.click();\n                                                link.parentNode.removeChild(link);\n                                            })\n                                        }\n                                    }}\n                                >\n                                    Скачать шаблон\n                                </button>\n                            </div>\n                        </div>\n\n                        <br />\n\n                        <h5 className='mb-1 fw-bold' style={{ fontSize: '2.5vh' }}>Настройка системы налогообложения</h5>\n                        {/* <div className=\"filter-item col me-2 mb-3 w-50\">\n                            <label style={{ fontSize: '2vh', margin: '1vh 0' }} htmlFor=\"store\">Магазин:</label>\n                            <select style={{ fontSize: '2vh' }} className='form-control w-75' id=\"store\" defaultValue={brandNames ? brandNames[0] : null}\n                                onChange={e => setActiveBrand(e.target.value)}\n                            >\n                                {\n                                    brandNames && brandNames.map((brand, i) => (\n                                        <option key={i} value={brand}>{brand}</option>\n                                    ))\n                                }\n                            </select>\n                        </div> */}\n                        {/* <div className='d-flex justify-content-between align-items-center w-50'>\n                            <div className=''>\n                                <label htmlFor=\"\" className='mt-0 mb-0 fw-bold'>Вариант расчёта</label>\n                                <select className='form-control mt-2 w-75' name=\"\" id=\"\" style={{ fontSize: '2vh' }}\n                                    onChange={e => setTax({ ...tax, type: e.target.value })}\n                                >\n                                    <option value=\"От выручки\" selected=\"\">От выручки (от общей суммы продажи за вычетом возвратов)</option>\n                                    <option value=\"От валовой прибыли\">От валовой прибыли (выручка за вычетом возвратов и себестоимости продаж)</option>\n                                    <option value=\"От прибыли\">От прибыли (выручка за вычетом возвратов и комиссий, не включая себестоимость)</option>\n                                </select>\n                            </div>\n                        </div> */}\n                        <div className='w-75'>\n                            <div>\n                                <label htmlFor=\"\" className='mt-2 mb-0 fw-bold'>Процентная ставка по налогу</label>\n                                <input type=\"number\" className=\"form-control mt-2 w-50\" onChange={e => setTax({ ...tax, value: Number(e.target.value) })} />\n                            </div>\n                        </div>\n                        <button className='prime-btn' style={{ padding: '1.25vh 2vh', maxWidth: '12vw' }}\n                            onClick={e => handleTaxSubmit(e, tax)}\n                        >\n                            Сохранить\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Settings","import { URL } from \"./config\";\n\nexport const ServiceFunctions = {\n  register: async (object) => {\n    try {\n      const res = await fetch(`${URL}/api/user/signup`, {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(object),\n      });\n      const data = await res.json();\n      return data;\n    } catch (error) {\n      alert(error);\n    }\n  },\n\n  updateToken: async (brand_name, token, authToken) => {\n    const res = await fetch(`${URL}/api/shop/`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        authorization: \"JWT \" + authToken,\n      },\n      body: JSON.stringify({ brand_name, token, is_active: true }),\n    });\n    const data = await res.json();\n    return data;\n  },\n\n  // getDataCollection: async (id, days, brandName) => {\n  //   const res = await fetch(\n  //     `${URL}/api/data-collection/${id}?days=${days}&brandName=${brandName}`,\n  //     {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"content-type\": \"application/json\",\n  //       },\n  //     }\n  //   );\n\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  // getFilteredCollection: async (id, days, brandName) => {\n  //   const res = await fetch(\n  //     `${URL}/api/data-collection/filtered/${id}?days=${days}&brandName=${brandName}`,\n  //     {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"content-type\": \"application/json\",\n  //       },\n  //     }\n  //   );\n\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  // getBrandNames: async (token) => {\n  //   const res = await fetch('https://radar-analytica.ru/api/shop/all', {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //       \"authorization\": \"JWT \" + token,\n  //     },\n  //   });\n\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  // getBrandNames: async (id) => {\n  //     const res = await fetch(`${URL}/api/data-collection/names/${id}`, {\n  //         method: 'GET',\n  //         headers: {\n  //             'content-type': 'application/json'\n  //         },\n  //     })\n\n  //     const data = await res.json()\n  //     return data\n  // },\n\n  // getOrders: async (id, brandName) => {\n  //   const res = await fetch(`${URL}/api/orders/${id}?brandName=${brandName}`, {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //     },\n  //   });\n\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  // getSales: async (id, brandName) => {\n  //   const res = await fetch(`${URL}/api/sales/${id}?brandName=${brandName}`, {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"content-type\": \"application/json\",\n  //     },\n  //   });\n\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  // getGeoData: async (id, brandName, days) => {\n  //   const res = await fetch(\n  //     `${URL}/api/data-collection/geo/${id}?brandName=${brandName}&days=${days}`,\n  //     {\n  //       method: \"GET\",\n  //       headers: {\n  //         \"content-type\": \"application/json\",\n  //       },\n  //     }\n  //   );\n\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  // updateTax: async (id, brandName, obj) => {\n  //   const res = await fetch(\n  //     `${URL}/api/data-collection/tax/${id}?brandName=${brandName}`,\n  //     {\n  //       method: \"POST\",\n  //       headers: {\n  //         \"content-type\": \"application/json\",\n  //       },\n  //       body: JSON.stringify(obj),\n  //     }\n  //   );\n\n  //   console.log(obj);\n  //   const data = await res.json();\n  //   return data;\n  // },\n\n  getDashBoard: async (token, day, idShop) => {\n    const res = await fetch(`https://radar-analytica.ru/api/dashboard/?period=${day}&shop=${idShop}`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": \"JWT \" + token\n\n      },\n    });\n\n    const data = await res.json();\n\n    return data;\n  },\n\n\n  getAllShops: async (token) => {\n    const res = await fetch('https://radar-analytica.ru/api/shop/all', {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": \"JWT \" + token\n      },\n    });\n    const data = await res.json();\n    return data;\n  },\n  getGeographyData: async (token, day, idShop) => {\n    const res = await fetch(`https://radar-analytica.ru/api/geo/?period=${day}&shop=${idShop}`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"authorization\": \"JWT \" + token\n      },\n    })\n    const data = await res.json()\n    return data\n  }\n};\n"],"names":["Settings","user","useContext","AuthContext","brandNames","setBrandNames","useState","activeBrand","setActiveBrand","useEffect","ServiceFunctions","getBrandNames","id","then","data","names","Set","length","file","setFile","tax","setTax","type","value","console","log","_jsxs","className","children","_jsx","SideNav","TopNav","title","style","fontSize","margin","htmlFor","defaultValue","onChange","e","target","map","brand","i","name","files","height","padding","maxWidth","marginLeft","onClick","async","alert","formData","FormData","append","fetch","concat","URL","method","body","ok","Error","error","response","blob","url","window","createObjectURL","Blob","link","document","createElement","href","setAttribute","appendChild","click","parentNode","removeChild","Number","handleTaxSubmit","obj","preventDefautl","updateTax","register","res","headers","JSON","stringify","object","json","updateToken","brand_name","token","authToken","authorization","is_active","getDashBoard","day","idShop","getAllShops","getGeographyData"],"sourceRoot":""}